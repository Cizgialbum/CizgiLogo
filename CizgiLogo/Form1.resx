<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAARAAAA0QAAA/8AAB3/AAA4/wAAUv8AAG3/AACH/wAAof8AALz/AADW/wAA8P8AAP//AAD//wAA
        /9EAAP8RAAAA0QAAAP8AAAD/AAAA/wAACf8AACP/AAA9/wAAWP8AAHL/AACM/wAAp/8AAMH/AADc/wAA
        9v8AAP//AAD/0QAAAP8AAAD/HxgA/xgSAP8AAAD/AAAA/wgHDv8gGyX/EA0//wAAXf8AAHj/DwyJ/x8X
        mP8PC7v/AADh/wAA/P8AAAD/AAAA/3xjAP90WwD/AAAA/wAAAP8wKAL/fGgA/1BAD/8AAC7/AABJ/z0u
        Sv96Wj//PSxy/wAAsv8AAM3/AAAA/wAAAP9qVQD/emAA/wAAAP8AAAD/V0cB/3tlAP91XAD/CAYA/wAA
        Gv89Lif/elso/zYnU/8AAIP/AACe/wAAAP8AAAD/XksB/39lBf8AAAD/BwYA/3ZcAP97YgD/emAA/y4k
        AP8AAAD/PS4D/3xcEv8fFzT/AABU/wAAbv8AAAD/AAAA/1pFAP98XAH/AAAA/ywgAP90VQD/RzYC/3pf
        AP9cSAD/AAAA/z0uAP98XAL/HxcL/wAAJf8AAD//AAAA/wAAAP9ZQgD/dFIA/xYQAP9fQwD/dVMA/xgS
        Af9UQgD/el8A/w8MAP9UPwD/elsB/x8XAf8AAAD/AAAQ/wAAAP8AAAD/RTME/3ZVAv8rHgD/ck4A/2hI
        AP8AAAD/LiMB/3pdA/80JwD/W0UC/3hZAv8WDwD/AAAA/wAAAP8AAAD/AAAA/z8wAv99XwL/TTsA/3lc
        AP9FNAD/AAAA/wgGAP99YAH/YUkA/1hBAP94VgL/AAAA/wAAAP8AAAD/AAAA/wAAAP9AMQD/f2QB/3hh
        Af9/ZgD/GBMA/wAAAP8AAAD/UD0A/3tbAP9lRgD/ck0A/wAAAP8AAAD/AAAA/wAAAP8AAAD/NykA/31g
        AP98YgD/ZFEA/wAAAP8AAAD/AAAA/ygdAP98WQX/b0oA/2pCAP8AAAD/AAAA/wAAAP8AAAD/AAAA/x8X
        AP99XwD/el8A/zUqAP8AAAD/AAAA/wAAAP8AAAD/aUgE/2pEAP9fOQD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8YEgD/YEsC/2BLAf8QDAD/AAAA/wAAAP8AAAD/AAAA/y8eAP9MMQD/OiYA/wAAAP8AAAD/AAAA/wAA
        ANEAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ANEAAAARAAAA0QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ANEAAAARAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
</root>